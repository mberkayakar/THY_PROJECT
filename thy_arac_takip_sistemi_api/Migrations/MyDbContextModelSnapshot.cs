// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using thy_arac_takip_sistemi_api.Repo;

namespace thy_arac_takip_sistemi_api.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("DoorSCC", b =>
                {
                    b.Property<int>("doorListid")
                        .HasColumnType("int");

                    b.Property<int>("sccListid")
                        .HasColumnType("int");

                    b.HasKey("doorListid", "sccListid");

                    b.HasIndex("sccListid");

                    b.ToTable("DoorSCC");
                });

            modelBuilder.Entity("EventLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("eventLogType")
                        .HasColumnType("int");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EventLogs");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.AWB", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("awbText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateFlight")
                        .HasColumnType("datetime2");

                    b.Property<string>("destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flightDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("handlingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pieces")
                        .HasColumnType("int");

                    b.Property<int>("reservationId")
                        .HasColumnType("int");

                    b.Property<string>("sccText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("weight")
                        .HasColumnType("int");

                    b.Property<string>("weightUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("reservationId");

                    b.ToTable("AWBs");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.ButtonEntry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("buttonNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateLogin")
                        .HasColumnType("datetime2");

                    b.Property<int>("doorNo")
                        .HasColumnType("int");

                    b.Property<string>("plate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ButtonEntries");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.Config", b =>
                {
                    b.Property<string>("key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("key");

                    b.ToTable("Configs");

                    b.HasData(
                        new
                        {
                            key = "RESERVATION_DELAY",
                            value = "300"
                        },
                        new
                        {
                            key = "BUTTON_DELAY",
                            value = "7200"
                        },
                        new
                        {
                            key = "SMS_URL",
                            value = "https://wsdev.thy.com/sms-gateway/send-sms/bulk"
                        },
                        new
                        {
                            key = "SMS_USERNAME",
                            value = "AYP-THYAO"
                        },
                        new
                        {
                            key = "SMS_PASSWORD",
                            value = "hPhjix8sOvf2"
                        },
                        new
                        {
                            key = "SMS_BASIC_AUTH_USERNAME",
                            value = "wstestuser"
                        },
                        new
                        {
                            key = "SMS_BASIC_AUTH_PASSWORD",
                            value = "thy1234"
                        });
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.Door", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateLastExit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateLastOwned")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("doorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("doorNumber")
                        .HasColumnType("int");

                    b.Property<bool>("isBusy")
                        .HasColumnType("bit");

                    b.Property<bool>("isNotEmpty")
                        .HasColumnType("bit");

                    b.Property<string>("lastOwnerPlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lastOwnerReservationId")
                        .HasColumnType("int");

                    b.Property<string>("operationArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("readerModuleId")
                        .HasColumnType("int");

                    b.Property<int>("reservationId")
                        .HasColumnType("int");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("id");

                    b.HasIndex("readerModuleId");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.DoorAssign", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("dateAssign")
                        .HasColumnType("datetime2");

                    b.Property<int>("doorNo")
                        .HasColumnType("int");

                    b.Property<string>("plate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("reservationId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("DoorAssigns");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.LatSCC", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("lat")
                        .HasColumnType("datetime2");

                    b.Property<int>("sccId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("sccId");

                    b.ToTable("Lats");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.LoginLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("authority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.NLogItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("NLogs");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.PTS", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("buttonNo")
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateLogin")
                        .HasColumnType("datetime2");

                    b.Property<int>("doorNo")
                        .HasColumnType("int");

                    b.Property<string>("fileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isButtonEntry")
                        .HasColumnType("bit");

                    b.Property<string>("model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("plate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("PTSLogs");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.ReaderModule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateLastRead")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("doorCountFinish")
                        .HasColumnType("int");

                    b.Property<int>("doorCountStart")
                        .HasColumnType("int");

                    b.Property<string>("readerData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("readerId")
                        .HasColumnType("int");

                    b.Property<string>("readerIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("readerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ReaderModules");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.Reservation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long?>("agentId")
                        .HasColumnType("bigint");

                    b.Property<string>("agentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("carPlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("carType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateCarArrived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateDoorAssigned")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateEstimatedArriveFinish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateEstimatedArriveStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("doorNumber")
                        .HasColumnType("int");

                    b.Property<string>("driverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("driverPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("driverSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isArrived")
                        .HasColumnType("bit");

                    b.Property<bool?>("isUnload")
                        .HasColumnType("bit");

                    b.Property<bool?>("isWaiting")
                        .HasColumnType("bit");

                    b.Property<int?>("reservationType")
                        .HasColumnType("int");

                    b.Property<string>("sccText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.SCC", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("strength")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SCCs");

                    b.HasData(
                        new
                        {
                            id = 1,
                            code = "JOKER",
                            strength = 1
                        },
                        new
                        {
                            id = 2,
                            code = "IMPORT",
                            strength = 2
                        },
                        new
                        {
                            id = 3,
                            code = "ICHAT",
                            strength = 2
                        });
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.SCCText", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("awbId")
                        .HasColumnType("int");

                    b.Property<string>("sccText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("awbId");

                    b.ToTable("SCCTexts");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("authority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateLastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.WaitingQueue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("reservationId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("reservationId");

                    b.ToTable("WaitingQueues");
                });

            modelBuilder.Entity("DoorSCC", b =>
                {
                    b.HasOne("thy_arac_takip_sistemi_api.Models.Door", null)
                        .WithMany()
                        .HasForeignKey("doorListid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("thy_arac_takip_sistemi_api.Models.SCC", null)
                        .WithMany()
                        .HasForeignKey("sccListid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.AWB", b =>
                {
                    b.HasOne("thy_arac_takip_sistemi_api.Models.Reservation", "reservation")
                        .WithMany("awbList")
                        .HasForeignKey("reservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reservation");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.Door", b =>
                {
                    b.HasOne("thy_arac_takip_sistemi_api.Models.ReaderModule", "readerModule")
                        .WithMany("doorList")
                        .HasForeignKey("readerModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("readerModule");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.LatSCC", b =>
                {
                    b.HasOne("thy_arac_takip_sistemi_api.Models.SCC", "scc")
                        .WithMany()
                        .HasForeignKey("sccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("scc");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.SCCText", b =>
                {
                    b.HasOne("thy_arac_takip_sistemi_api.Models.AWB", null)
                        .WithMany("sccList")
                        .HasForeignKey("awbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.WaitingQueue", b =>
                {
                    b.HasOne("thy_arac_takip_sistemi_api.Models.Reservation", "reservation")
                        .WithMany()
                        .HasForeignKey("reservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reservation");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.AWB", b =>
                {
                    b.Navigation("sccList");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.ReaderModule", b =>
                {
                    b.Navigation("doorList");
                });

            modelBuilder.Entity("thy_arac_takip_sistemi_api.Models.Reservation", b =>
                {
                    b.Navigation("awbList");
                });
#pragma warning restore 612, 618
        }
    }
}
